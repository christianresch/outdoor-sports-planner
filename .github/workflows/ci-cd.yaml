name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    name: Run Tests & Linting
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # Fetch the repo content

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install  # Install dependencies from pyproject.toml

      - name: Run Linter (flake8)
        run: poetry run flake8 .

      - name: Run Formatting Check (black)
        run: poetry run black --check .

      - name: Run Tests
        run: poetry run pytest

  deploy:
    name: Deploy to AWS EC2
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'  # Only runs if main is updated

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Debug SSH Connection # Added in case debugging is needed
        env:
          EC2_HOST: 54.166.174.236
          EC2_USER: ubuntu
          SSH_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        run: |
          echo "$SSH_KEY" > private_key.pem
          chmod 600 private_key.pem
          ssh -v -i private_key.pem -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST "echo 'SSH Connection Successful'"

      - name: Deploy to EC2
        env:
          EC2_HOST: 54.166.174.236
          EC2_USER: ubuntu
          SSH_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
        run: |
          echo "$SSH_KEY" > private_key.pem
          chmod 600 private_key.pem

          # Connect to EC2 and deploy
          ssh -v -i private_key.pem -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST << 'EOF'
            cd outdoor-sports-planner
            git pull origin main
            echo "Stopping old containers..."
            docker-compose down --remove-orphans
            docker system prune -af  # Free up space

            echo "Building and starting new containers..."
            docker-compose build
            docker-compose up -d
          EOF
